{"version":3,"sources":["Components/AddCategoria.js","helpers/getGifs.js","hooks/useFetchGifs.js","Components/GiftGridItem.js","Components/GiftGrid.js","Components/GifExpertApp.js","index.js"],"names":["AddCategoria","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","map","toUpperCase","includes","type","value","onChange","target","placeholder","getGifs","categoria","a","url","fetch","resp","json","data","gifs","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","GiftGridItem","className","src","alt","GiftGrid","GiftExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAe,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAmCA,OACI,sBAAMC,SA9BW,SAACC,GAElBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAG1BR,GAAe,SAACS,GAMZ,OAJiBA,EAAIC,KAAI,SAAAD,GACrB,OAAOA,EAAIE,iBAGFC,SAAUV,EAAWS,eACvB,YAAIF,GAIL,CAAEP,GAAR,mBAAuBO,OAK/BN,EAAc,MAOlB,SACI,uBACIU,KAAO,OACPC,MAASZ,EACTa,SAtCc,SAACV,GACvBF,EAAcE,EAAEW,OAAOF,QAsCfG,YAAa,gC,+BC5ChBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCF,EAFnC,+DAIAG,MAAOD,GAJP,cAIbE,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKf,KAAM,SAAAiB,GAAQ,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXR,IAAG,UAAEM,EAAIG,cAAN,aAAE,EAAYC,iBAAiBV,QAXvB,kBAeZK,GAfY,4CAAH,sDC2BLM,EAzBM,SAAEb,GAEnB,MAAyBlB,mBAAS,CAC9BwB,KAAM,GACNQ,SAAS,IAFb,mBAAMC,EAAN,KAAaC,EAAb,KAmBA,OAdAC,qBAAW,WAEPlB,EAASC,GACJkB,MAAM,SAAAV,GAEHQ,EAAU,CACNV,KAAME,EACNM,SAAS,SAItB,CAACd,IAGGe,GCZII,EAXM,SAAC,GAAqB,EAApBV,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOR,EAAS,EAATA,IAE9B,OACI,sBAAKkB,UAAY,6CAAjB,UACI,qBAAKC,IAAOnB,EAAKoB,IAAOZ,IACxB,kCAAKA,EAAL,WC6BGa,EA/BE,SAAC,GAAiB,IAAhBvB,EAAe,EAAfA,UAEf,EAA+Ba,EAAcb,GAAjCW,EAAZ,EAAOL,KAAaQ,EAApB,EAAoBA,QAIpB,OACI,qCACA,mCAAMd,EAAN,OAEEc,GAAW,2CAEb,qBAAKM,UAAU,YAAf,SAGYT,EAAOpB,KAAK,SAAAiB,GAAG,OAEX,cAAC,EAAD,eAEQA,GADGA,EAAIC,aCWxBe,EA7BO,WAGlB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAKA,OACI,qCACI,iDACA,cAAC,EAAD,CAAcA,cAAkBA,IAChC,uBAEA,6BAEQ4C,EAAWlC,KAAK,SAACD,GAAD,OACR,cAAC,EAAD,CACIU,UAAaV,GACNA,Y,MClBvCoC,IAASC,OACL,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.a61826f0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategoria = ({setCategorias}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        \r\n        e.preventDefault();\r\n         \r\n        if(inputValue.trim().length > 0) {\r\n\r\n            /* setCategorias(cat => [...cat, inputValue]); */\r\n            setCategorias( (cat) => {\r\n\r\n                const MayusCat = cat.map(cat => {\r\n                    return cat.toUpperCase();\r\n                })\r\n                \r\n                if( MayusCat.includes( inputValue.toUpperCase() ) ) {\r\n                    return [...cat];\r\n                }\r\n\r\n                else {\r\n                    return [inputValue, ...cat ];\r\n                }\r\n                \r\n            } );\r\n\r\n            setInputValue('');\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit} >\r\n            <input\r\n                type = \"text\"\r\n                value = {inputValue}\r\n                onChange = { handleInputChange }\r\n                placeholder =\"Escriba un gift a buscar\"\r\n            />\r\n        </form>\r\n\r\n    );\r\n\r\n}\r\n\r\nAddCategoria.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n\r\n//export default addCategoria;","\r\n\r\nexport const getGifs = async (categoria) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${categoria}&limit=10&api_key=45HlcPkIS31PpUnTjpASsKsFLQAw9W7T`\r\n\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map ( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url //Si viene imagenes pasa\r\n        };\r\n    });\r\n    \r\n    return gifs;\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n//TAmbien pueden tener su estado\r\nconst useFetchGifs = ( categoria )=> {\r\n\r\n    const[state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( categoria)\r\n            .then( img => {\r\n\r\n                setState( {\r\n                    data: img,\r\n                    loading: false\r\n                });\r\n            });\r\n\r\n    }, [categoria] );\r\n\r\n\r\n    return state;\r\n\r\n}\r\n\r\nexport default useFetchGifs;\r\n\r\n\r\n    //PAra se ejecute getGifs cuando se renderiza por primera vez   \r\n    /* useEffect( () => {\r\n        getGifs(categoria)\r\n            .then(img => setImages(img)); //Al estar en helper se convierte en async y promesa debe\r\n                                            //retornar el setImagens para redibujar iamgenes\r\n    }, [categoria] ); */ //Para quitar usee efect dependencia faltante, es por si la categoria cambia q vuelva a ejecutar el\r\n    //gerGifs para disparar toda la peticiom http de todos los gift \r\n\r\n  //  getGifs();","\r\n\r\nconst GiftGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className = \"card animate__animated animate__fadeInLeft\">\r\n            <img src = {url} alt = {title} />\r\n            <p> {title} </p>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default GiftGridItem;","import React from \"react\";\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\nimport GiftGridItem from './GiftGridItem';\r\n\r\n\r\nconst GiftGrid = ({categoria}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs( categoria );\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3> {categoria} </h3>\r\n\r\n        { loading && <p>Loading...</p>}\r\n\r\n        <div className=\"card-grid\">\r\n\r\n                 {\r\n                    images.map( img => (\r\n\r\n                        <GiftGridItem \r\n                            key = {img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                } \r\n        </div>\r\n\r\n        </>\r\n        \r\n    );\r\n\r\n}\r\n\r\nexport default GiftGrid;","import React, { useState } from \"react\";\r\n\r\nimport { AddCategoria } from \"./AddCategoria\";\r\nimport GiftGrid from \"./GiftGrid\";\r\n\r\nconst GiftExpertApp = () => {\r\n\r\n    //const categorias = ['One punch', 'MortalCombat', 'Dragon ball']; //Esto no xq no se puede agregar nuevos elementos\r\n    const [categorias, setCategorias] = useState(['One punch']);\r\n    /* const handleAdd = (e) => {\r\n        setCategorias( cat => [...cat, 'Roberto'] );\r\n    } */\r\n\r\n    return (\r\n        <>\r\n            <h2> GiftExpertApp </h2>\r\n            <AddCategoria setCategorias  = {setCategorias} />\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categorias.map( (cat) => (\r\n                            <GiftGrid \r\n                                categoria = {cat} \r\n                                key = {cat}    \r\n                            />                    \r\n                    ))}\r\n            </ol>\r\n\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GiftExpertApp from '../src/Components/GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GiftExpertApp />,\n\n    document.getElementById('root')\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}